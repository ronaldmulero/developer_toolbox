<?php

/**
 * Implements hook_menu().
 *
*/

function ta390_menu() {
  $items = array();

  $items['cohort'] = array(
    'access callback' => TRUE,
    'page callback' => 'ta390_cohort',
  );

  return $items;
}

/**
 *  Page callback
 *  Prefills cohort registration/login information
 *
 *dpr($form);
 *dpr($path);
 *dpr($args_array);
*/

function ta390_cohort($tid = '', $email = '', $displayname = '') {
  /* record URL in syslog */
  watchdog('Cohort Referral');
  // sanitize $email parameter
  $email = check_url($email);
  // Check if the user is already a member
  $result = db_query("SELECT * FROM {users} WHERE mail LIKE :email", array(':email' => $email))->fetchField();
  if ($result) {
      // TODO: if user already logged-in
      // TODO: if user already assigned to cohort
    /* prefill login form */
    drupal_goto('user/login/' . $tid . '/' . $email . '/' . $displayname);
  }  
  /* else prefill registration form */
  else {
    drupal_goto('user/register/' . $tid . '/' . $email . '/' . $displayname);
  }
}

function ta390_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // security check
  $uri = $_GET["q"];
  $path = check_url($uri);
  // get parameters from URL
  $args_array = explode("/", $path);
  $tid = $args_array[2];
  $email = $args_array[3];
  $displayname = $args_array[4];
  // validate cohort ID 
  $query = new EntityFieldQuery;
  $tid_result = $query
    ->entityCondition('entity_type', 'taxonomy_term')
    ->propertyCondition('tid', $tid)
    ->propertyCondition('vid', 62) //cohort vid
    ->execute();
      if (($tid) && (!$tid_result)) {
      form_set_error('submitted', t('The cohort ID appears to be invalid.'));
    }
  // validate email address
  if (!valid_email_address($email)) {
    form_set_error('submitted][email_address', t('The email address appears to be invalid.'));
  }
  // prefill registration form
  $form['account']['mail']['#default_value'] = $email;
  $lang = $form['profile_display_name']['field_hplife_profile_displayname']['#language'];
  $form['profile_display_name']['field_hplife_profile_displayname'][$lang][0]['value']['#default_value'] = $displayname;
  $form['cohort_id'] = array(
    '#type' => 'hidden',
    '#value' => $tid,
  );
}

function ta390_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login') {
    // security check
    $uri = $_GET["q"];
    $path = check_url($uri);
    // get parameters from URL
    $args_array = explode("/", $path);
    $tid = $args_array[2];
    $email = $args_array[3];
    $displayname = $args_array[4];
    // validate cohort ID 
    $query = new EntityFieldQuery;
    $tid_result = $query
      ->entityCondition('entity_type', 'taxonomy_term')
      ->propertyCondition('tid', $tid)
      ->propertyCondition('vid', 62) //cohort vid
      ->execute();
      if (($tid) && (!$tid_result)) {
        form_set_error('submitted', t('The cohort ID appears to be invalid.'));
      }
    // no need to validate email address, since user already a member
    // prefill login form
    $form['name']['#default_value'] = $email;
    $form['cohort_id'] = array(
      '#type' => 'hidden',
      '#value' => $tid,
    );
  }
}
